version: '3.8'

services:
  api:
    build: .
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:password@db:5432/events_db
      - JWT_SECRET=38239fb65f4428287b2cd58852830f02ca4d4c76719d2a2acdcd9549395388bda8ca3b61cd7ee2909495b1a74bb73b68adfad447edc552aa5c99dc476fe8ed59b4ea58b01cfb461c3ffc738edc1b958cf6e988e06ca0ba346211a41803575e56ac94585076d30dea7eed51d82a404ced36d4731685d6447540690a4b2d42f543bec9727ccb0085fdf56cafb00cf411af507ee1a2dc545e84831006a4f2503abe5e072b8ab59794788eb599a4a5bd83bd506f2518e7e3e915a2dc92530786bd7b26278890124149e42b4aad91b2c346a3d2a0566046cf2a9047c2e3740412399469c2dba3a301528a9f9dab1d7d9b8700c69a6ae1962f2015a85b8e9364e2d671
      - SALT_ROUNDS=12
    depends_on:
      - db
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
      # Exclude node_modules and .prisma from being overwritten by host
      - /app/node_modules
      - /app/node_modules/.prisma
    # Command is now simplified as the entrypoint handles migrations
    command: npm run dev

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=events_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d events_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: